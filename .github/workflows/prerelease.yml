name: pre-release

on:
  issue_comment:
    types: [created]

jobs:
  pre-release:
    if:  contains(github.event.comment.body, 'prerelease')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/github-script@v7
        id: pr
        with:
          result-encoding: string
          script: |
            return github.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.issue.number
              }).then( (pr) => { return pr.data.head.ref })
      - name: React to comment
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.issue
            github.reactions.createForIssueComment({
              owner,
              repo,
              comment_id: context.payload.comment.id,
              content: "eyes",
            });
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ steps.pr.outputs.result }}
      - name: Get Latest Tag
        run: echo "LATEST_TAG=$(git tag '--sort=version:refname'| tail -1 | awk '{ print } END { if (!NR) print "0.0.0" }')" >> $GITHUB_ENV
      - name: Calculate version
        run: |
          export BRANCH=$(echo ${{steps.pr.outputs.result}} | sed 's/_/-/g' | cut -d- -f2)
          export COMMIT=$(git rev-parse --short HEAD)
          echo "VERSION=${BRANCH}-${COMMIT}" >> $GITHUB_ENV
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          registry-url: https://npm.pkg.github.com/
          scope: ${{ github.repository_owner }}
      - run: npm install
      - run: npm ci
      - run: npm version ${{ env.LATEST_TAG }}-${{ env.VERSION }} --no-git-tag-version
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.CLOUD_DEVOPS_TOKEN }}
          token: ${{ secrets.CLOUD_DEVOPS_TOKEN }}
      - name: 'Comment PR'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CLOUD_DEVOPS_TOKEN }}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
            github.issues.createComment({ issue_number, owner, repo, body: 'done, package version: ${{ env.LATEST_TAG }}-${{ env.VERSION }}' });
